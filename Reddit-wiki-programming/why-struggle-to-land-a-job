"
Totally agree, I've been a developer since around 1997, I'm in my 40's now and I still love this stuff. 
If anybody wants to know how or why, Theo nailed it here. You need to start out with small successes. 
I got a copy of my friends VGA sprite library and learned how to bitblt data into memory that just so happened to represent 
pixels on the screen. The joy of feeling MY pixels on MY screen was such a silly small goal, but it gave me a better idea. 
What if I could use the keyboard to move it around, so then you learn about keyboard interrupts, which is a bit hard for my level at the time. 
But I did it and learned to move it around with the cursors. You gotta pick a small goal, something you know you could make yourself happy with
 and realise these lofty goals in the far distance could happen one day. But not today. Today is about what is a 256 colour palette and how to 
allocate enough memory for double buffering because your sprite looks ugly when you get screen tearing because your bit blitter code is too slow.

I can't remember the number of times I went into the desert (metaphorically). Unable to know what to learn next, being lost in a mass of mathematics
 and learning such a small amount, but being persistent. You gotta set a goal, just a little something to accomplish so you can feel good, then you'll
 carry on to the next goal.  Being a developer is sometimes not just about coding cool things. But being able to handle "I don't know what to do and I
 have no idea whether this is gonna work or not" and being able to psychologically carry that to the next way point. If you give up easily, developing
 isn't for you. You need to realise at the beginning you'll spend weeks learning shit nobody cares about, or even stuff which isn't useful. Sometimes
 useless stuff is the platform to understand WHY its useless and WHY the other thing is useful. It's not just enough to know what to do. Most of the
 time it's more important to know what NOT to do.

I once spent two weeks writing an opengl rendering codebase which I called "deferred rendering" where I would batch operations together
 so I could improve throughput on rendering operations. I completely forgot that in opengl matrix operations are a stack and you can't
 just stack up hundreds of matrix operations, then render everything. Because guess what dumbass, when you do that, everything
 you render uses the last matrix state that you set. So I spent two weeks to write a codebase that rendered everything into a
 tiny square in the corner of the screen. That was stupid. But I learned a lot from doing that. 

Make your own projects, solve your own puzzles, find a thing which costs you time and make a tool to save that time. Make a website that you personally would use.

Everything in this video was a big YES!
"
- https://www.youtube.com/watch?v=rzwaaWH0ksk

